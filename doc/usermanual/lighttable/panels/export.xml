<!DOCTYPE sect2 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
               "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
		<!ENTITY % darktable_dtd SYSTEM "../../dtd/darktable.dtd">
		%darktable_dtd;
		]>
<sect2 status="final" id="export_selected">

  <title>Export selected</title>

  <indexterm>
    <primary>lighttable panels</primary>
    <secondary>export</secondary>
  </indexterm>

  <indexterm>
    <primary>export</primary>
  </indexterm>

  <indexterm>
    <primary>file export</primary>
  </indexterm>

  <informaltable frame="none">
    <tgroup cols="2" colsep="0" rowsep="0">
      <colspec colwidth="6*"/>
      <colspec colwidth="4*"/>
      <tbody>
        <row>
          <entry>
            Workflow ends in this panel with the exporting of your developed images. You can
            export to a file on disk, email, various on-line storage places, a webalbum, or a
            book template. <emphasis>Tip: you can use ctrl-e from within the darkroom mode to
            export.</emphasis>
          </entry>
          <entry>
            <graphic fileref="lighttable/images/panel_exportselected.png" scalefit="1" width="80%" align="center" />
          </entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>
    All settings in this panel can be saved for later reuse. Press the
    <inlinegraphic fileref="&icon_module_presets;" scalefit="1" width="2%" align="center" />
    button to manage your presets.
  </para>

  <sect3 id="export_selected_usage">

    <title>Usage</title>

    <sect4 id="export_selected_usage_storage">

      <title>target storage</title>

      <para>
        Where to store your selected images. Different back-ends are implemented, including file
        on disk, a LaTeX book template and various web albums. Depending on the selected target,
        you will be asked to give additional information, like filenames, or account name and
        password.
      </para>

    </sect4>

    <sect4 id="export_selected_usage_filename">

      <title>filename template</title>

      <para>
        You can define filenames that darktable generates for export. Several pre-defined
        variables can be used as placeholders:
      </para>

      <informaltable frame="none" width="80%">
        <tgroup cols="2" colsep="0" rowsep="0">
          <tbody>
            <row>
              <entry>
                <code>$(ROLL_NAME)</code>
              </entry>
              <entry>
                roll of the input image
              </entry>
            </row>
            <row>
              <entry>
                <code>$(FILE_FOLDER)</code>
              </entry>
              <entry>
                folder containing the input image
              </entry>
            </row>
            <row>
              <entry>
                <code>$(FILE_NAME)</code>
              </entry>
              <entry>
                basename of the input image
              </entry>
            </row>
            <row>
              <entry>
                <code>$(FILE_EXTENSION)</code>
              </entry>
              <entry>
                extension of the input image
              </entry>
            </row>
            <row>
              <entry>
                <code>$(ID)</code>
              </entry>
              <entry>
                the image id
              </entry>
            </row>
            <row>
              <entry>
                <code>$(VERSION)</code>
              </entry>
              <entry>
                the duplicate version (see <xref linkend="sidecar_files"/>)
              </entry>
            </row>
            <row>
              <entry>
                <code>$(SEQUENCE)</code>
              </entry>
              <entry>
                a sequence number within export job
              </entry>
            </row>
            <row>
              <entry>
                <code>$(MAX_WIDTH)</code>
              </entry>
              <entry>
                maximum image width to limit within export session
              </entry>
            </row>
            <row>
              <entry>
                <code>$(MAX_HEIGHT)</code>
              </entry>
              <entry>
                maximum image height to limit within export session
              </entry>
            </row>
            <row>
              <entry>
                <code>$(YEAR)</code>
              </entry>
              <entry>
                year at date of export
              </entry>
            </row>
            <row>
              <entry>
                <code>$(MONTH)</code>
              </entry>
              <entry>
                month at date of export
              </entry>
            </row>
            <row>
              <entry>
                <code>$(DAY)</code>
              </entry>
              <entry>
                day at date of export
              </entry>
            </row>
            <row>
              <entry>
                <code>$(HOUR)</code>
              </entry>
              <entry>
                hour at time of export
              </entry>
            </row>
            <row>
              <entry>
                <code>$(MINUTE)</code>
              </entry>
              <entry>
                minute at time of export
              </entry>
            </row>
            <row>
              <entry>
                <code>$(SECOND)</code>
              </entry>
              <entry>
                second at time of export
              </entry>
            </row>
            <row>
              <entry>
                <code>$(EXIF_YEAR)</code>
              </entry>
              <entry>
                Exif year
              </entry>
            </row>
            <row>
              <entry>
                <code>$(EXIF_MONTH)</code>
              </entry>
              <entry>
                Exif month
              </entry>
            </row>
            <row>
              <entry>
                <code>$(EXIF_DAY)</code>
              </entry>
              <entry>
                Exif day
              </entry>
            </row>
            <row>
              <entry>
                <code>$(EXIF_HOUR)</code>
              </entry>
              <entry>
                Exif hour
              </entry>
            </row>
            <row>
              <entry>
                <code>$(EXIF_MINUTE)</code>
              </entry>
              <entry>
                Exif minute
              </entry>
            </row>
            <row>
              <entry>
                <code>$(EXIF_SECOND)</code>
              </entry>
              <entry>
                Exif second
              </entry>
            </row>
            <row>
              <entry>
                <code>$(STARS)</code>
              </entry>
              <entry>
                star rating
              </entry>
            </row>
            <row>
              <entry>
                <code>$(LABELS)</code>
              </entry>
              <entry>
                colorlabels
              </entry>
            </row>
            <row>
              <entry>
                <code>$(MAKER)</code>
              </entry>
              <entry>
                camera maker
              </entry>
            </row>
            <row>
              <entry>
                <code>$(MODEL)</code>
              </entry>
              <entry>
                camera model
              </entry>
            </row>
            <row>
              <entry>
                <code>$(TITLE)</code>
              </entry>
              <entry>
                title from metadata
              </entry>
            </row>
            <row>
              <entry>
                <code>$(CREATOR)</code>
              </entry>
              <entry>
                creator from metadata
              </entry>
            </row>
            <row>
              <entry>
                <code>$(PUBLISHER)</code>
              </entry>
              <entry>
                publisher from metadata
              </entry>
            </row>
            <row>
              <entry>
                <code>$(RIGHTS)</code>
              </entry>
              <entry>
                rights from metadata
              </entry>
            </row>
            <row>
              <entry>
                <code>$(USERNAME)</code>
              </entry>
              <entry>
                user name
              </entry>
            </row>
            <row>
              <entry>
                <code>$(PICTURES_FOLDER)</code>
              </entry>
              <entry>
                pictures folder
              </entry>
            </row>
            <row>
              <entry>
                <code>$(HOME)</code>
              </entry>
              <entry>
                home folder
              </entry>
            </row>
            <row>
              <entry>
                <code>$(DESKTOP)</code>
              </entry>
              <entry>
                desktop folder
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>
        All of the variables support basic string substitution inspired by bash. The details
        differ however, for example all patterns are treated as simple string comparisons. There
        is no regex support. For example you can do the following:
        <code>$(ROLL_NAME/search/replace)</code>
        . This means if your roll name is e.g. <emphasis>1970-01-01_RAW_Time-Begins</emphasis>
        and you use
        <code>$(ROLL_NAME/RAW/JPG)</code>
        it will result in a roll name of: <emphasis>1970-01-01_JPG_Time-Begins</emphasis>
      </para>

      <informaltable frame="none" width="80%">
        <tgroup cols="2" colsep="0" rowsep="0">
          <tbody>
            <row>
              <entry>
                <code>$(var-default)</code>
              </entry>
              <entry>
                If
                <code>var</code>
                is empty, use
                <code>default</code>
                .
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var+alt_value)</code>
              </entry>
              <entry>
                If
                <code>var</code>
                is set, use
                <code>alt_value</code>
                , else use empty string.
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var:offset)</code>
              </entry>
              <entry>
                <code>var</code>
                starting from
                <code>offset</code>
                . If
                <code>offset</code>
                is less than zero it is counted from the back of the string.
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var:offset:length)</code>
              </entry>
              <entry>
                At most
                <code>length</code>
                characters of
                <code>var</code>
                , starting from
                <code>offset</code>
                . If
                <code>offset</code>
                is less than zero it is counted from the back of
                <code>var</code>
                . If
                <code>length</code>
                is less than zero it indicates the end of the result, counted from the back of
                <code>var</code>
                , and not an actual length.
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var#pattern)</code>
              </entry>
              <entry>
                Remove
                <code>pattern</code>
                from the start of
                <code>var</code>
                .
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var%pattern)</code>
              </entry>
              <entry>
                Remove
                <code>pattern</code>
                from the end of
                <code>var</code>
                .
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var/pattern/replacement)</code>
              </entry>
              <entry>
                Replace the first occurrence of
                <code>pattern</code>
                in
                <code>var</code>
                with
                <code>replacement</code>
                . If
                <code>replacement</code>
                is empty then
                <code>pattern</code>
                will be removed.
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var//pattern/replacement)</code>
              </entry>
              <entry>
                Replace all occurrences of
                <code>pattern</code>
                in
                <code>var</code>
                with
                <code>replacement</code>
                . If
                <code>replacement</code>
                is empty then
                <code>pattern</code>
                will be removed.
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var/#pattern/replacement)</code>
              </entry>
              <entry>
                If
                <code>var</code>
                starts with
                <code>pattern</code>
                then
                <code>pattern</code>
                is replaced with
                <code>replacement</code>
                .
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var/%pattern/replacement)</code>
              </entry>
              <entry>
                If
                <code>var</code>
                ends with
                <code>pattern</code>
                then
                <code>pattern</code>
                is replaced with
                <code>replacement</code>
                .
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var^)</code>
              </entry>
              <entry>
                Make the first character of
                <code>var</code>
                uppercase.
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var^^)</code>
              </entry>
              <entry>
                Make all characters of
                <code>var</code>
                uppercase.
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var,)</code>
              </entry>
              <entry>
                Make the first character of
                <code>var</code>
                lowercase.
              </entry>
            </row>
            <row>
              <entry>
                <code>$(var,,)</code>
              </entry>
              <entry>
                Make all characters of
                <code>var</code>
                lowercase.
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

    </sect4>

    <sect4 id="export_selected_usage_directory">

      <title>output directory</title>

      <para>
        Pressing button
        <inlinegraphic fileref="&icon_directory;" scalefit="1" width="2%" align="center" />
        opens a dialog to select the parent directory for export.
      </para>

    </sect4>

    <sect4 id="export_selected_usage_conflict">

      <title>on conflict</title>

      <para>
        If this option is set to <quote>create unique filename</quote> darktable automatically
        chooses a unique new file name in case of naming conflicts with existing files. The
        alternative <quote>overwrite</quote> setting forces darktable to exactly adhere to the
        selected filename template, overwriting any existing files on conflict. This option gets
        reset to <quote>create unique filename</quote> after each export job in order to protect
        you from accidental data loss.
      </para>

    </sect4>

    <sect4 id="export_selected_usage_format">

      <title>file format</title>

      <para>
        darktable can export to various file formats. Depending on the output format you can
        define additional parameters. For some formats you need to decide on the desired bit
        depth and the compression method, respectively.
      </para>

      <para>
        For some export formats like JPEG you can define an output quality. Higher values will
        lead to larger file sizes. The default quality <quote>95</quote> is a good setting for
        very high quality exports, e.g. for archiving or printing purposes. If you need a good
        compromise between size and quality, e.g. for online image display or uploads, you
        should consider a value of <quote>90</quote> instead.
      </para>

      <para>
        If the file format supports embedded metadata, like JPEG, JPEG2000 and TIFF, darktable
        will try to store the history stack as XMP tags within the output file. This information
        can later be used to reconstruct your parameters and settings that have produced the
        exported image (see <xref linkend="history_stack"/>).
      </para>

      <para>
        <emphasis>Caution: for various reasons embedding XMP tags into output files may fail
        without notice, eg. if certain size limits are exceeded. Users are therefore advised to
        not rely their backup strategy on this feature. To back up your data make sure to save
        your input (raw) file as well as all of darktable's XMP sidecar files.</emphasis>
      </para>

      <para>
        If you don't want to distribute history stack data with your images, there are various
        tools to delete embedded XMP tags. As an example you can use the program
        <ulink url="http://www.sno.phy.queensu.ca/~phil/exiftool/"><emphasis>exiftool</emphasis></ulink>
        with:
      </para>

      <para>
<programlisting>Exiftool -XMP:all=   image.jpg
</programlisting>
      </para>

    </sect4>

    <sect4 id="export_selected_usage_size">

      <title>max size</title>

      <para>
        Set the maximum width and height of the output images in pixels. Set both to a value of
        <quote>0</quote> to export with the original dimensions (after cropping). If the values
        exceed the original dimensions darktable will either export with the original dimensions
        or perform an upscaling step, depending on the setting of the following parameter.
      </para>

      <para>
        <emphasis>Caution: it's a frequent pitfall to accidentally put low values, like 1 or 10,
        in these fields, causing darktable to produce miniature output files. You might think
        darktable's output is broken, but in fact it only generated what you asked
        for.</emphasis>
      </para>

    </sect4>

    <sect4 id="export_selected_usage_upscaling">

      <title>allow upscaling</title>

      <para>
        If set to <quote>yes</quote> darktable will perform an upscaling step in case the user
        defined maximum width and height exceed the original dimensions. If set to
        <quote>no</quote> the exported image's dimensions will not exceed the original ones
        (after cropping).
      </para>

    </sect4>

    <sect4 id="export_selected_usage_profile">

      <title>profile</title>

      <para>
        This defines the output color profile. Select <quote>image settings</quote> if you want
        the settings in the <emphasis>output color profile</emphasis> (see
        <xref linkend="output_color_profile"/>) module of the individual images to take
        precedence.
      </para>

    </sect4>

    <sect4 id="export_selected_usage_intent">

      <title>intent</title>

      <para>
        This option lets you define the intent, i.e. the way darktable will deal with
        out-of-gamut colors. See <xref linkend="rendering_intent"/> for a more detailed
        description of the available options.
      </para>

    </sect4>

    <sect4 id="export_selected_usage_style">

      <title>style</title>

      <para>
        This option lets you choose a style, i.e. a collection of history stack items, which
        darktable combines with the existing history stack to generate the output image. These
        history items are only added temporarily; the original history stack is not overwritten.
        You can use this feature to add processing steps and parameters that you want to be
        applied specifically to images before export, e.g. you may define a style that adds a
        stronger level of sharpening when you produce scaled-down JPEG files for the internet or
        add a certain level of exposure compensation to all of your output images. Learn more
        about styles in <xref linkend="styles"/>, and <xref linkend="history"/>.
      </para>

    </sect4>

    <sect4 id="export_selected_usage_mode">

      <title>mode</title>

      <para>
        When applying a style during export this option defines whether the history stack items
        of that style replace the original history stack of the image or are appended to it.
        Technically speaking, in append mode history stack items of the style will constitute
        separate instances of the respective modules on top of any existing ones (see also
        <xref linkend="multiple_instances"/>). As a consequence the original history stack will
        fully remain in effect with the new items being applied additionally. This way you can
        apply an overall adjustment (e.g. exposure) to a bunch of exported images while
        respecting the settings of each individual image.
      </para>

    </sect4>

    <sect4 id="export_selected_usage_export">

      <title>export</title>

      <para>
        Pressing this button starts a background job to export all selected images. A bar at the
        bottom of the left side panel displays the progress. Furthermore a notification message
        pops up reporting the export progress. You may click on the pop-up to make it disappear.
        You may <emphasis>abort</emphasis> the export job by clicking on the
        <inlinegraphic fileref="&icon_lighttable_abort;" scalefit="1" width="2%" align="center" />
        icon located close to the progress bar.
      </para>

    </sect4>

  </sect3>

</sect2>
